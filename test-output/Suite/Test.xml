<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="18" hostname="DESKTOP-840VI3P" failures="3" tests="7" name="Test" time="6.16" errors="0" timestamp="13 Aug 2025 05:32:51 GMT">
  <testcase classname="com.Hotel.API.base.Base" name="@AfterMethod tearDown" time="0.0">
    <failure type="java.lang.AssertionError" message="The following asserts failed:
	Status code should be 404 expected [404] but found [204],
	Content-Type should be application/json expected [true] but found [false],
	Response body should not be empty expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: The following asserts failed:
Status code should be 404 expected [404] but found [204],
Content-Type should be application/json expected [true] but found [false],
Response body should not be empty expected [false] but found [true]
at com.Hotel.API.base.Base.tearDown(Base.java:57)
... Removed 27 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.Hotel.API.base.Base" name="@AfterMethod tearDown" time="0.001">
    <failure type="java.lang.AssertionError" message="The following asserts failed:
	Status code should be 404 expected [404] but found [200]">
      <![CDATA[java.lang.AssertionError: The following asserts failed:
Status code should be 404 expected [404] but found [200]
at com.Hotel.API.base.Base.tearDown(Base.java:57)
... Removed 27 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.Hotel.API.tests.Add_user" name="addUser" time="1.459"/>
  <testcase classname="com.Hotel.API.tests.View_user_list" name="viewUserList" time="0.192"/>
  <testcase classname="com.Hotel.API.tests.View_user_by_gender" name="viewUserByGender_Positive" time="0.168"/>
  <testcase classname="com.Hotel.API.tests.View_user_by_gender_NEGATIVE" name="viewUserByGender_Negative" time="0.222">
    <failure type="java.lang.AssertionError" message="The following asserts failed:
	Gender list should not be empty expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: The following asserts failed:
Gender list should not be empty expected [true] but found [false]
at com.Hotel.API.tests.View_user_by_gender_NEGATIVE.viewUserByGender_Negative(View_user_by_gender_NEGATIVE.java:37)
... Removed 24 stack frames]]>
    </failure>
  </testcase> <!-- viewUserByGender_Negative -->
  <testcase classname="com.Hotel.API.tests.View_user_by_id_NEGATIVE" name="viewUserById_Negative" time="0.139">
    <failure type="java.lang.AssertionError" message="The following asserts failed:
	Response is not valid JSON">
      <![CDATA[java.lang.AssertionError: The following asserts failed:
Response is not valid JSON
at com.Hotel.API.tests.View_user_by_id_NEGATIVE.viewUserById_Negative(View_user_by_id_NEGATIVE.java:34)
... Removed 24 stack frames]]>
    </failure>
  </testcase> <!-- viewUserById_Negative -->
  <testcase classname="com.Hotel.API.tests.Update_usernumber_NEGATIVE" name="updateUserNumber_Negative" time="0.278">
    <failure type="java.lang.AssertionError" message="The following asserts failed:
	User ID 10 should exist expected object to not be null">
      <![CDATA[java.lang.AssertionError: The following asserts failed:
User ID 10 should exist expected object to not be null
at com.Hotel.API.tests.Update_usernumber_NEGATIVE.updateUserNumber_Negative(Update_usernumber_NEGATIVE.java:45)
... Removed 24 stack frames]]>
    </failure>
  </testcase> <!-- updateUserNumber_Negative -->
  <testcase classname="com.Hotel.API.tests.Delete_user_by_id" name="deleteUserById_Positive" time="0.165"/>
  <testcase classname="com.Hotel.API.base.Base" name="@BeforeSuite beforeAll" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeAll -->
  <testcase classname="com.Hotel.API.base.Base" name="@BeforeSuite beforeAll" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeAll -->
  <testcase classname="com.Hotel.API.base.Base" name="@BeforeSuite beforeAll" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeAll -->
  <testcase classname="com.Hotel.API.base.Base" name="@BeforeSuite beforeAll" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeAll -->
  <testcase classname="com.Hotel.API.base.Base" name="@BeforeSuite beforeAll" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeAll -->
  <testcase classname="com.Hotel.API.base.Base" name="@BeforeSuite beforeAll" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeAll -->
  <testcase classname="com.Hotel.API.base.Base" name="@AfterSuite afterAll" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterAll -->
  <testcase classname="com.Hotel.API.base.Base" name="@AfterSuite afterAll" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterAll -->
  <testcase classname="com.Hotel.API.base.Base" name="@AfterSuite afterAll" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterAll -->
  <testcase classname="com.Hotel.API.base.Base" name="@AfterSuite afterAll" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterAll -->
  <testcase classname="com.Hotel.API.base.Base" name="@AfterSuite afterAll" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterAll -->
  <testcase classname="com.Hotel.API.base.Base" name="@AfterSuite afterAll" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterAll -->
  <testcase classname="com.Hotel.API.base.Base" name="@BeforeTest authenticate" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest authenticate -->
  <testcase classname="com.Hotel.API.base.Base" name="@BeforeTest authenticate" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest authenticate -->
  <testcase classname="com.Hotel.API.base.Base" name="@BeforeTest authenticate" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest authenticate -->
  <testcase classname="com.Hotel.API.base.Base" name="@BeforeTest authenticate" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest authenticate -->
  <testcase classname="com.Hotel.API.base.Base" name="@BeforeTest authenticate" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest authenticate -->
  <testcase classname="com.Hotel.API.base.Base" name="@BeforeTest authenticate" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest authenticate -->
</testsuite> <!-- Test -->
